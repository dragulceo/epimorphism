wt wt {{
	w = $wt_exp$;
}}

alpha alpha {{
	a = $a_exp$;
}}

color simple_color {{
	// palletize as function of z
	float l = 0.08 * sqrt(t_z.x * t_z.x + t_z.y * t_z.y);
	float l2 = 0.08 * sqrt(z_in.x * z_in.x + z_in.y * z_in.y);
	vec4 del = vec4(pal(l, vec3(0.5,0.5,0.5), vec3(0.5,0.5,0.5), vec3(2.0,1.0,0.0), vec3(l2 + 0.5,0.20,0.25)), 0);
  seed = hsv2rgb(vec4(time * @spd@ + @rot@ + @pal@ * del.x, w * @sat@, w * @val@, a));
}}

color tex_color_scroll {{
	vec2 ofs = @scale@ * wdt.zw;
	ofs.x += time * 0.025 * @tex_spd@;
	ofs.y += cos(time * 0.027 * @tex_spd@);
	//float ti = 0.023 * time * @tex_spd@;
	//vec2 rot = mod(vec2(cos(ti) * ofs.x - sin(ti) * ofs.y, sin(ti) * ofs.x + cos(ti) * ofs.y), 1.0);
  seed = texture2D(aux[#0], ofs);
  seed = rgb2hsv(seed);

	// multiplying the value by w makes things look nice
	// should possibly put this in a flag
	//float hofs = 0.75 * freqData(0.1 * (z.x + wx + wy + w));
	float hofs = 0.0;
	float l = 0.08 * sqrt(t_z.x * t_z.x + t_z.y * t_z.y);
	vec4 del = vec4(pal(l, vec3(0.5,0.5,0.5), vec3(0.5,0.5,0.5), vec3(2.0,1.0,0.0), vec3(0.5,0.20,0.25)), 0);
  seed = hsv2rgb(vec4(time * @spd@ + @rot@ + seed.x + hofs + @pal@ * del.x, @sat@ * seed.y, @val@ * seed.z * w, a * seed.a));
}}


color tex_color {{
	vec2 ofs = @scale@ * wdt.zw;
  seed = texture2D(aux[#0], ofs);
  seed = rgb2hsv(seed);

	// multiplying the value by w makes things look nice
	// should possibly put this in a flag
	//float hofs = 0.75 * freqData(0.1 * (z.x + wx + wy + w));
	float hofs = 0.0;
	float l = 0.08 * sqrt(t_z.x * t_z.x + t_z.y * t_z.y);
	vec4 del = vec4(pal(l, vec3(0.5,0.5,0.5), vec3(0.5,0.5,0.5), vec3(2.0,1.0,0.0), vec3(0.5,0.20,0.25)), 0);
  seed = hsv2rgb(vec4(time * @spd@ + @rot@ + seed.x + hofs + del.x, @sat@ * seed.y, @val@ * seed.z * w, a * seed.a));
}}


color fb_color {{
	vec2 ofs = mod(@scale@ * wdt.zw, 1.0);

	//vec4 bg_seed = seed;

  seed = texture2D(fb, ofs);
  seed = rgb2hsv(seed);

  seed = hsv2rgb(vec4(time * @spd@ + @rot@ + seed.x, @sat@ * seed.y, @val@ * seed.z * w, a));// * seed.a));

	//seed = bg_seed * 0.2 + seed * 0.8;
}}

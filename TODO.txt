PROJECTS:
  - NOW
    - something is moving too fast(sometimes??)
    - color garishness
    - too large of a zoom out sometines
    - theres some black glitchiness (related to overlaying fields?)?
    - transparency?
    - 2 dfs 180 deg out of color phase

  - Distance Fields
    - IMMEDIATE
      - dont reduce distance seeds?
      - deformations?
      - enable with UI switch?p
    - distance fieds seem locked to each other
    - overlaying distance fields is a bit weird.  merge them (union)?
    - starting weird on linux when breaking cache


    - EXPERIMENTAL
      - alpha_linear?
      - optimization (necessary) sometimes ~10 fps on insane w/ 1080 gtx
        - possibly optimize by only getting distance(not ofs) when doing normals
      - de-pixelate?
      - tweak animation constants
      - better rotations/translations?
      - play with mod
      - torus involution - https://i.redd.it/bfg90xr89gyz.gif
      - more than 1 light?

      - fog?
      - anti-aliasing


    - RELEASE!

    - REFERENCE
      - more info - http://iquilezles.org/www/articles/distfunctions/distfunctions.htm

  - Misc
    - some kind of wave path that spends more time towards one of the extremes(+1?)
    - customize glsl mode
    - sometimes zooms out too far
    - COLORS TOO HOMOGENOUS
      - limuisoty, pallet, divergence?
      - internal representation
      - post processing
    - WEIGHTED SWITCHING
    - on linux controls go away in full screen
    - not sure resolution cookie is working?
    - randomized start times?
    - more color variation?  saturation -> divergence?
    - figure out float texture stuff
    - rethink how famaily/sidx is working (independent searchable typeclass?)
    - clean up library & serialize
    - auto image crop/resize
    - take textures out of html folder

  - Sort backlog

  - Main Pattern Improvements
    - redo wca?
    - more randomized start (just set t_phase = ??)
    - too much darkness/desaturation
    - smooth mask has artifacts
    - play with pallets a bit more. inc_sc, lgv, spread wave size, etc
    - make sure t's are all good/scaled correctly
    - keep (val)contrast around better
    - w * w in seed val?
    - images
      - geom_2, geom_7 ugly
      - there are some line artifacts in some images(geom3, islamic)
      - better resolution images? make sure all load
      - some just might not look good
    - rewrite seed.w, seed.a to not require recompile

  - Audio Responsiveness

  - UI
    - refactor layout
      - menu available in dev
    - basic idea is that all db & data modifications happen through UI
    - but we need to completely rework how the ui happens.
      - dont want to have to pause to update tree, that's kind of ghetto
      - individually pause paths/modules?
      - reactive UI?
    - ability to clone module tree & quickly make changes/save/load/etc
    - misc
      - https://ace.c9.io/#nav=about
      - show shader source in tab

  - main pattern
    - T
    - SEED
    - COLOR still needs work some times
    - integrate fb color into main
    - framed images
    - different w's

  - async (AFF?)
    - lib/db requests
    - image requests
      - could start whole application in global image loading callbacks
    - db requests

  - exposure
    - PureScript Hack Session
    - codame?
    - museums?
    - twitter handle
    - Scenario? (https://itunes.apple.com/us/app/scenario/id423444193?mt=12)
    - Chrome Experiments
    - Chrome Web store (https://developer.chrome.com/webstore/get_started_simple)
    - Chrome themes


-------------------------------- BACKLOG --------------------------------

BUGS:
  - throw error of sub, par/zn or module not found
  - component indentation still isn't perfect
  - value should be main, vert, or disp when changing vals sometimes?
  - freezing spinner (i think its the synchronous get requests for lib)
  - firefox WebGL: texImage2D: conversion requires pixel reformatting (maybe non-issue)
  - catch errors when parsing t_exp
  - no error message when image texture doesnt exist
  - weird when opening console in fullscreen
  - error handling for failing to enter fullscreen mode
  - number parsing flakey? how so? floating point?

PERF:
  - only run seed shader every n frames?
  - zoom out performance problem.  unclear what the deal is.  really bad with 1/z(cache something or other?)
  - choppy in safari
  - auto scale performance for framerate or something
    - EXT_disjoint_timer_query to measure/scale performance?

SYSTEM:
  - take snapshot of flattened shader code?
  - rebuild monad transformer stack
  - KMap a monad?  sized-vector?
  - switch to psc package
  - separate live, reference libraries?
  - some kind of error/bug reporting on website
  - Types & Library not dry
  - images & sections aren't quite LTypes yet
  - Type Refs(PatternRef..) & other newtypes
  - mobile/browser detection in main?  use to determine enging conf?
  - nosleep
  - stick button in some modes to enable dev(for mobile)
  - put key handlers into a text file -  a - scr main.application.t incZn idx:0 ofs:1
  - more granular function library(math, colorspace, etc)
  - get rid of global.js
  - better caching/versioning
  - log vs flog bs
  - modify system/engine/ui conf via ui
  - put t's into buffers so we dont have to recompile(or just make a really complex highly parameterized t)
  - image loading optional
  - remove ssRef from ScriptFn, replace with sysT.  Need to remove pauseAfterSwitch
  - do something smart if not enough resources (uniforms, tex, etc)
  - better deploy scripts / use git for deploy
  - scripts
    - way of switching modules while keeping phase/scripts.
    - keep scripts when switching modules?
  - javascript files are all over the place (global, ui.js, etc)
  - fract a sub on main body set in engine before compiling?
  - addGlobalEventListeners is a bit ghetto
  - more work on fract.  more specific fracts.  like for seed vs T.  can possibly also increase quality
  - better logging
  - prevent default in ui.js
  - remote control (webui, websockets, etc)
  - compiler substitutions %XXXX%, etc can still cause errors?  dont remember what kind
  - investigate dsl for scripts
  - engine stability/lost context - https://www.khronos.org/registry/webgl/extensions/WEBGL_lose_context/
  - chrome/ff shader debugger/editor
  - better engine error checking/handling
  - get rid of if statements ins seed_w & clean all of that up
  - could maybe clean up switch a bit more (remove imports/purges, combine methods)
  - module/submodule cycles??
  - only way to modify tree is via switch?
  - optional kernels
  - DATA MODEL
    - families should also have args, to differentiate var transformers from generators, etc
    - refactor includes - pattern -> component
    - importing = clone, rewrite clonePattern.  references?
    - get rid of slib?
    - scripts could use some more thought.
      - pattern level scripts
      - how to syncronize multiple scripts? i.e, color & disp?
      - which module do they belong to?
    - be better about reloading objects after refs might change?
    - construct lib refs such that reading from lib is pure?
  - DATABASE
    - which database?
    - how are things stored/serialized?
    - search by family, component, flags, props, id
    - sync local & remote dbs
    - put textures in db
    - misc:
      - update flags on save (default != true)
      - check for duplicates when saving (id = hash of contents?)
      - namespace collisions detection

FEATURE IDEAS:
  - vector pars (for 3d stuff?)
  - non t-based seed animation
  - optional increase of bit depth - half float, etc (works?  not obvious is better; half_float = 36193)
  - shader precision optimization? mediump, highp, etc
  - blend maps!! variable interpolation
  - catagorize transformations:
    - symmetries, is_inversion, scale, periodic?, rational?, accumulation points, empty regions?, elementary, custom?
  - use images(self????) as transformations
  - vector fields
  - seed impulses
  - graphically outline seeds?
  - animate seed textures somehow
  - superformula - https://en.wikipedia.org/wiki/Superformula
  - for each pixel, define a normal vector, so we can do lighting & material effects
  - investigate dsl for scripts
  - webcam input

FUTURE:
  - test on ipad
  - test on android
  - unit tests
  - logging system
  - programming guidelines document - i.e make sure all tree modifications rebuild mod ref lib
  - benchmarking tools
  - image comparison testing

NO CLUE:
  - saving images loses bit depth??
  - weird divide by zero issue - glitch in content
  - maybe pixel alignment issues with images?
  - change resolution during switching error?


MATH:
  t_inner:z / (z + 1) + z / (z - 1)}
  zn [1.500 + 0.000i, 0.000 + 0.000i, 0.800 + 0.000i, 0.200 + 0.000i]
  creates a legitimate fractal
  I saw something that might explain it

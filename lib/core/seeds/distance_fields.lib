###Module
id df_sphere
component df_sphere
flags {lib, distance}

###Component
id df_sphere
family distance_field
default_mod df_sphere
code &&&

vec3 p = pos;

// rotate about a somewhat arbitrary axis
p = rotate3D(p, vec3(1.0, 0.3, -0.2), time / 8.0);
vec3 sc = p / vec3(d, d, d);

vec2 ofs;

if(abs(sc.z) > 1.0)
  ofs = sc.xy;
else
  ofs = sc.zx;
ofs = (ofs + vec2(1.0, 1.0)) / vec2(2.0, 2.0);

float l = length(p) - 1.0;

df = vec4(ofs, 0.0, l);


###Module
id df_cylinder
component df_cylinder
flags {lib, distance}

###Component
id df_cylinder
family distance_field
default_mod df_cylinder
code &&&

vec3 p = pos;

// rotate about y arbitrary axis
p = rotate3D(p, vec3(0.0, 1.0, 0.0), time / 4.0);

float l = length(p.xz) - d;

vec2 ofs;
ofs = vec2(atan(p.x, p.z) / PI, p.y / (2.0 * PI * d));
ofs = (ofs + vec2(1.0, 1.0)) / vec2(2.0, 2.0);

df = vec4(ofs, 0.0, l);

seed seed_nothing {{
	seed = vec4(0.0, 0.0, 0.0, 0.0);
}}

seed seed_analysis {{
	vec2 z_i = z;
  %t%
	%reduce%

	float wx = (abs(z.x) + @w@ - 1.0) / @w@;
	float wy = (abs(z.y) + @w@ - 1.0) / @w@;

  float w = max(0.0, max(wx, wy));
	float mask = ceil(w);

	// could fix this if cared
	if(w < 0.00001){
		vec2 fr = fract((z + vec2(1,1)) / vec2(2,2));
		seed = vec4(0, fr.x, fr.y, 1.0);
	}else{
	  seed = vec4(w, 0, 0, 1.0);
	}

	z = z_i;
}}

seed seed_simple {{
	vec2 z_i = z;
	%reduce%

	float wx = (abs(z.x) + @w@ - 1.0) / @w@;
	float wy = (abs(z.y) + @w@ - 1.0) / @w@;

  float w = max(0.0, max(wx, wy));
	float mask = ceil(w);


	seed = hsv2rgb(vec4(0.0, 1.0, w, mask * @alpha@));
	z = z_i;
}}

seed seed_simple_img {{
	vec2 z_i = z;
  %t%
	%reduce%

	float wx = (abs(z.x) + @w@ - 1.0) / @w@;
	float wy = (abs(z.y) + @w@ - 1.0) / @w@;

  float w = max(0.0, max(wx, wy));
	float mask = ceil(w);

	float sc = 0.25;
	vec2 ofs = mod(sc * vec2(wx, wy), 1.0);
  seed = texture2D(aux[#0], ofs);

	// mask w
	seed.w *= mask * @alpha@;

	// preserve val
	seed = rgb2hsv(seed);
	seed.z *= w;
	seed = hsv2rgb(seed);

	z = z_i;
}}

seed seed_wca {{
	vec4 wdt;
	vec2 z_i = z;
	float w, a, wx, wy, mask;
  %t%
	%reduce%

	// w = (w, alpha, wx, wy)
	%w%

	w = wdt.x;
	%wt%

	a = wdt.y;
	%a%

	%seed_color%

	z = z_i;
}}

seed seed_multi {{
	vec4 seed0, seed1, seed2;
	vec2 z_i = z;
  %t%
	%reduce%

	%seed0%
	seed0 = seed;

	%seed1%
	seed1 = seed;

	%seed2%
	seed2 = seed;

	float a = 1.0 - (1.0 - seed0.a) * (1.0 - seed1.a) * (1.0 - seed2.a);

	if(a == 0.0)
		seed = vec4(0.0, 0.0, 0.0, 0.0);
	else {
		vec4 m1 = mix(seed0.a * seed0, seed1, seed1.a);
		vec4 m2 = mix(m1, seed2, seed2.a);
		seed = 1.0 / a * m2;
	}
	seed.a = a;
	z = z_i;
}}

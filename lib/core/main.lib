### Component
id seed_main
family main
includes [header, colorspace, math]
code &&&

void main() {
  // into z coordinates
  vec2 z = vec2(2.0, 2.0) * gl_FragCoord.xy / vec2(kernel_dim, kernel_dim) - vec2(1.0, 1.0);

  vec4 seed;
  %seed%

  gl_FragColor = seed;
}


### Component
id main
family main
includes [header, colorspace, math]
code &&&

void main() {
  vec4 color;
  vec2 z, z_in;

  // into z coordinates
  z = vec2(2.0, 2.0) * gl_FragCoord.xy / vec2(kernel_dim, kernel_dim) - vec2(1.0, 1.0);
  z_in = z;

  %application%

  gl_FragColor = color;
}

### Component
id disp
family disp
includes [header, colorspace]
code &&&

void main() {
  vec4 frame;
  vec2 clipSpace = gl_FragCoord.xy / vec2(kernel_dim, kernel_dim);
  vec2 z = vec2(2.0, 2.0) * clipSpace - vec2(1.0, 1.0);
  frame = texture2D(fb, clipSpace);

  %post%

  frame.a = 1.0; // this value is used by webgl
  gl_FragColor = frame;
}


### Component
id vert
family vert
code &&&
attribute vec2 a_position;

void main() {
  gl_Position = vec4(a_position, 0, 1);
}

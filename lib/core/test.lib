### Module
id test_pattern_main
component main
modules {application: test_pattern}
flags {root}

###Module
id test_pattern
component test_pattern
flags {lib}

### Component
id test_pattern
family application
default_mod test_pattern
code &&&
vec2 r = (z + vec2(1.0)) / vec2(2.0);
color = hsv2rgb(vec4(r.xy, 1.0, 1.0));


###Module
id test_image
component test_image
images [textures/default/default0.png, textures/simplegeom/tile_grid3.png]
flags {lib}

### Component
id test_image
family application
default_mod test_image
code &&&
  z = (z + vec2(1.0, 1.0)) / vec2(2.0, 2.0);
  color = texture2D(aux[#0], z);
  //color += 0.5 * texture2D(aux[#1], z);


###Module
id analysis
component epimorphism
flags {lib}
modules {seed:seed_analysis, t:t_wrap_zo, color:color_id, reduce:torus_reduce}

###Module
id seed_analysis
component seed_analysis
flags {analysis}
par {w:0.05}

### Component
id seed_analysis
family seed
default_mod seed_analysis
children {t:t, reduce:reduce}
includes []
code &&&
  vec2 z_i = z;
  %t%
  %reduce%

  float wx = (abs(z.x) + |w| - 1.0) / |w|;
  float wy = (abs(z.y) + |w| - 1.0) / |w|;

  float w = max(0.0, max(wx, wy));
  float mask = ceil(w);

  // could fix this if cared
  if(w < 0.00001){
    vec2 fr = fract((z + vec2(1,1)) / vec2(2,2));
    seed = vec4(0, fr.x, fr.y, 1.0);
  }else{
    seed = vec4(w, 0, 0, 1.0);
  }

  z = z_i;
